from math import sqrt

# 1. Напишите программу, которая принимает на вход цифру, обозначающую
# день недели, и проверяет, является ли этот день выходным.
# Пример: 6 -> да, 7 -> да, 1 -> нет

n = int(input('Введите число: '))
if n == 6 or n == 7:
    print('да')
else:
    print('нет')


# 2. Напишите программу для проверки истинности утверждения
# ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат
for i in range(7):
    b = bin(i)[2:].zfill(3)
    if not(b[0] or b[1] or b[2]) == (not(b[0]) and not(b[1]) and not(b[2])):
        print(f'¬({b[0]} ⋁ {b[1]} ⋁ {b[2]}) = ¬{b[0]} ⋀ ¬{b[1]} ⋀ ¬{b[2]}')
    else:
        print(f'¬({b[0]} ⋁ {b[1]} ⋁ {b[2]}) ≠ ¬{b[0]} ⋀ ¬{b[1]} ⋀ ¬{b[2]}')


# 3. Напишите программу, которая принимает на вход координаты
# точки (X и Y), причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти
# плоскости, в которой находится эта точка (или на какой оси она
#  находится). Пример: x=34; y=-30 -> 4, x=2; y=4-> 1, x=-34; y=-30 -> 3
x, y = list(map(int, input('Введите два целых числа через запятую: ').split(', ')))
if x > 0 and y > 0:
    print('1')
elif x < 0 and y > 0:
    print('2')
elif x < 0 and y < 0:
    print('3')
elif x > 0 and y < 0:
    print('4')
elif x == 0:
    print('Точка находится на оси y')
elif y == 0:
    print('Точка находится на оси x')

# 4.Напишите программу, которая по заданному номеру четверти,
# показывает диапазон возможных координат точек в этой четверти (x и y).
n = int(input('Введите номер четверти: '))
print('Диапазон возможных координат точек: ', end='')
if n == 1:
    print('x > 0 и y > 0')
elif n == 2:
    print('x < 0 и y > 0')
elif n == 3:
    print('x < 0 и y < 0')
elif n == 4:
    print('x > 0 и y < 0')

# 5. Напишите программу, которая принимает на вход координаты
# двух точек и находит расстояние между ними в 2D пространстве.
# Пример:- A (3,6); B (2,1) -> 5,09, A (7,-5); B (1,-1) -> 7,21
x1, y1 = list(map(int, input('Введите координаты 1-й точки через запятую: ').split(', ')))
x2, y2 = list(map(int, input('Введите координаты 2-й точки через запятую: ').split(', ')))
print(round(sqrt((x1-x2)**2+(y1-y2)**2), 2))
